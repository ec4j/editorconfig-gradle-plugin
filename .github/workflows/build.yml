name: "build"

on: ["pull_request", "push"]

jobs:
  build:
    # Only run on PRs if the source branch is on someone else's repo
    if: ${{ github.event_name != 'pull_request' || github.repository != github.event.pull_request.head.repo.full_name }}
    runs-on: "ubuntu-latest"
    steps:
      - name: "checkout repository"
        uses: "actions/checkout@v2.3.4"
      - name: "validate gradle wrapper"
        uses: "gradle/wrapper-validation-action@v1.0.4"
      - name: "setup JDK 16"
        uses: "actions/setup-java@v2.2.0"
        with:
          distribution: 'temurin'
          java-version: "16"
      - name: "build"
        run: "./gradlew clean build -x test"
      - name: "determine status"
        run: |
          if [ "$(./gradlew properties | awk '/^version:/ { print $2; }' | grep '\-SNAPSHOT')" ]; then
            echo "STATUS=snapshot" >> $GITHUB_ENV
          else
            echo "STATUS=release" >> $GITHUB_ENV
          fi
      - name: "publish snapshot"
        if: "${{ env.STATUS != 'release' && github.event_name == 'push' && github.ref == 'refs/heads/master' }}"
        run: ./gradlew publishToSonatype
        env:
          ORG_GRADLE_PROJECT_sonatypeUsername: "${{ secrets.SONATYPE_USERNAME }}"
          ORG_GRADLE_PROJECT_sonatypePassword: "${{ secrets.SONATYPE_PASSWORD }}"
      - name: "publish release"
        if: "${{ env.STATUS == 'release' && github.event_name == 'push' && github.ref == 'refs/heads/master' }}"
        run: ./gradlew publishPlugins
        env:
          GRADLE_PUBLISH_KEY: "${{ secrets.GRADLE_PLUGIN_API_KEY }}"
          GRADLE_PUBLISH_SECRET: "${{ secrets.GRADLE_PLUGIN_API_SECRET }}"
